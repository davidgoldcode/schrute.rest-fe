[{"/Users/davidgold/Documents/lambdaSchool/projects/personal/schrute.rest-fe/dwight/src/index.js":"1","/Users/davidgold/Documents/lambdaSchool/projects/personal/schrute.rest-fe/dwight/src/reportWebVitals.js":"2","/Users/davidgold/Documents/lambdaSchool/projects/personal/schrute.rest-fe/dwight/src/App.js":"3"},{"size":500,"mtime":1610758756765,"results":"4","hashOfConfig":"5"},{"size":362,"mtime":1610758756775,"results":"6","hashOfConfig":"5"},{"size":1200,"mtime":1610760232548,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"10"},"xupjey",{"filePath":"11","messages":"12","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"13","messages":"14","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"15","usedDeprecatedRules":"10"},"/Users/davidgold/Documents/lambdaSchool/projects/personal/schrute.rest-fe/dwight/src/index.js",[],["16","17"],"/Users/davidgold/Documents/lambdaSchool/projects/personal/schrute.rest-fe/dwight/src/reportWebVitals.js",[],"/Users/davidgold/Documents/lambdaSchool/projects/personal/schrute.rest-fe/dwight/src/App.js",["18","19","20","21"],"import { useEffect, useState } from \"react\";\nimport axios from \"axios\";\n\nconst faq = [\n  {\n    q: \"Can I use this in my project?\",\n    a: \"Yes! Do whatever you'd like with this\",\n  },\n  {\n    q: \"Can I use this in my project?\",\n    a: \"Yes! Do whatever you'd like with this\",\n  },\n  {\n    q: \"Can I use this in my project?\",\n    a: \"Yes! Do whatever you'd like with this\",\n  },\n];\n\nfunction App() {\n  const [quote, setQuote] = useState(\"\");\n\n  useEffect(() => {\n    axios.get(\"\");\n  }, []);\n\n  return (\n    <>\n      <header>\n        <h1>Schrute.rest</h1>\n        <h3>\n          A free REST API to generate the best quotes that Scranton has ever\n          seen\n        </h3>\n      </header>\n      <main>\n        <div>\n          <div>\n            <h3>API</h3>\n            <span>\n              GET <a href=\"\"></a>\n            </span>\n            <span>Tweet</span>\n            <span>Refresh</span>\n          </div>\n          <h3>ttextetesljalsdjfl;kasd</h3>\n        </div>\n      </main>\n      <section>\n        <h3>FAQ</h3>\n        {faq.map((item) => (\n          <>\n            <h4>{item.q}</h4>\n            <p>{item.a}</p>\n          </>\n        ))}\n      </section>\n    </>\n  );\n}\n\nexport default App;\n",{"ruleId":"22","replacedBy":"23"},{"ruleId":"24","replacedBy":"25"},{"ruleId":"26","severity":1,"message":"27","line":20,"column":10,"nodeType":"28","messageId":"29","endLine":20,"endColumn":15},{"ruleId":"26","severity":1,"message":"30","line":20,"column":17,"nodeType":"28","messageId":"29","endLine":20,"endColumn":25},{"ruleId":"31","severity":1,"message":"32","line":40,"column":19,"nodeType":"33","endLine":40,"endColumn":30},{"ruleId":"34","severity":1,"message":"35","line":40,"column":19,"nodeType":"33","endLine":40,"endColumn":30},"no-native-reassign",["36"],"no-negated-in-lhs",["37"],"no-unused-vars","'quote' is assigned a value but never used.","Identifier","unusedVar","'setQuote' is assigned a value but never used.","jsx-a11y/anchor-has-content","Anchors must have content and the content must be accessible by a screen reader.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","no-global-assign","no-unsafe-negation"]